

                      1
                    /   \
                   2     3
                 /  \   /  \
                4   5   6   7
                   /     \
                  8       9

int sumOfNodeAtMinLevel(Node root){
    Queue<Node> queue = new LinkedList<>();
    queue.add(root);
    while(!queue.isEmpty()){
        int n = q.size();
        int sum = 0;
        boolean minLevelLeavesFound = false;
        for(int i=0; i<n; i++){
            Node curr = q.pop();
            if(curr.left == null && curr.right == null){
                minLevelLeavesFound = true;
                sum += curr.val;
            }
            if(curr.left != null){
                queue.add(curr.left);
            }
            if(curr.right != null){
                queue.add(curr.right);
            }
        }
        if(minLevelLeavesFound){
            return sum;
        }
    }
    return 0;
}